package com.sid.campusflow.models;

import com.sid.campusflow.utils.MediaUtils;

/**
 * Model class representing a glimpse (image or video) from an event
 */
public class EventGlimpse {
    private String id;
    private String eventId;
    private String mediaUrl;
    private int mediaType; // MediaUtils.MEDIA_TYPE_IMAGE or MediaUtils.MEDIA_TYPE_VIDEO
    private long uploadedAt;
    private String uploadedBy;
    private String thumbnailUrl; // For videos

    // Required empty constructor for Firestore
    public EventGlimpse() {
    }

    public EventGlimpse(String id, String eventId, String mediaUrl, int mediaType, long uploadedAt, String uploadedBy) {
        this.id = id;
        this.eventId = eventId;
        this.mediaUrl = mediaUrl;
        this.mediaType = mediaType;
        this.uploadedAt = uploadedAt;
        this.uploadedBy = uploadedBy;
        
        // For videos, the thumbnail URL is optional
        if (mediaType == MediaUtils.MEDIA_TYPE_VIDEO) {
            // Default thumbnail is generated by Cloudinary automatically
            this.thumbnailUrl = mediaUrl.replace("/upload/", "/upload/c_thumb,w_200,g_face/");
        }
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getEventId() {
        return eventId;
    }

    public void setEventId(String eventId) {
        this.eventId = eventId;
    }

    public String getMediaUrl() {
        return mediaUrl;
    }

    public void setMediaUrl(String mediaUrl) {
        this.mediaUrl = mediaUrl;
    }

    public int getMediaType() {
        return mediaType;
    }

    public void setMediaType(int mediaType) {
        this.mediaType = mediaType;
    }

    public long getUploadedAt() {
        return uploadedAt;
    }

    public void setUploadedAt(long uploadedAt) {
        this.uploadedAt = uploadedAt;
    }

    public String getUploadedBy() {
        return uploadedBy;
    }

    public void setUploadedBy(String uploadedBy) {
        this.uploadedBy = uploadedBy;
    }

    public String getThumbnailUrl() {
        return thumbnailUrl != null ? thumbnailUrl : mediaUrl;
    }

    public void setThumbnailUrl(String thumbnailUrl) {
        this.thumbnailUrl = thumbnailUrl;
    }

    public boolean isVideo() {
        return mediaType == MediaUtils.MEDIA_TYPE_VIDEO;
    }

    public boolean isImage() {
        return mediaType == MediaUtils.MEDIA_TYPE_IMAGE;
    }
} 